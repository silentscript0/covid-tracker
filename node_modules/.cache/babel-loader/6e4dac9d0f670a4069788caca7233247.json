{"ast":null,"code":"var _jsxFileName = \"/Users/tomirisandarbayeva/Desktop/covid-tracker/src/components/Chart/Chart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../API';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chart = ({\n  data: {\n    confirmed,\n    deaths,\n    recovered\n  },\n  country\n}) => {\n  _s();\n\n  const [dailyData, setDailyData] = useState({});\n  useEffect(() => {\n    const fetchAPI = async () => {\n      //Populate dailyData with modified data which is returned from func fetchDailyData\n      const gotten = await fetchDailyData();\n      setDailyData(gotten);\n    }; //console.log(\"Gotten Data\", dailyData);\n    //Call the function\n\n\n    fetchAPI();\n  }, []); //For local countries data\n\n  const barChart = confirmed ? /*#__PURE__*/_jsxDEV(Bar, {\n    data: {\n      labels: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        labels: 'People',\n        backgroundColor: [' rgba(0, 0, 255, 0.5)', ' rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n        data: [confirmed.value, recovered.value, deaths.value]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current state in ${country}`\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this) : null; //For the global data\n\n  const lineChart = dailyData[0] ? /*#__PURE__*/_jsxDEV(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        backgroundColor: 'rgba(255,255,255,0.5)',\n        fill: true\n      }]\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this) : null; // console.log(confirmed, recovered, deaths);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: country ? barChart : lineChart\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chart, \"/d+kuJuKj12qpSq7YzoKfQOF8wE=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/tomirisandarbayeva/Desktop/covid-tracker/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","data","confirmed","deaths","recovered","country","dailyData","setDailyData","fetchAPI","gotten","barChart","labels","datasets","backgroundColor","value","legend","display","title","text","lineChart","map","date","label","borderColor","fill","container"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,MAAb;AAAqBC,IAAAA;AAArB,GAAR;AAA0CC,EAAAA;AAA1C,CAAD,KAAyD;AAAA;;AACrE,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,QAAQ,GAAG,YAAY;AAC3B;AACA,YAAMC,MAAM,GAAG,MAAMb,cAAc,EAAnC;AACAW,MAAAA,YAAY,CAACE,MAAD,CAAZ;AACD,KAJD,CADc,CAOd;AACA;;;AACAD,IAAAA,QAAQ;AACT,GAVQ,EAUN,EAVM,CAAT,CAHqE,CAerE;;AACA,QAAME,QAAQ,GAAGR,SAAS,gBACxB,QAAC,GAAD;AACE,IAAA,IAAI,EAAE;AACJS,MAAAA,MAAM,EAAE,CAAC,UAAD,EAAa,WAAb,EAA0B,QAA1B,CADJ;AAEJC,MAAAA,QAAQ,EAAE,CACR;AACED,QAAAA,MAAM,EAAE,QADV;AAEEE,QAAAA,eAAe,EAAE,CACf,uBADe,EAEf,uBAFe,EAGf,sBAHe,CAFnB;AAOEZ,QAAAA,IAAI,EAAE,CAACC,SAAS,CAACY,KAAX,EAAkBV,SAAS,CAACU,KAA5B,EAAmCX,MAAM,CAACW,KAA1C;AAPR,OADQ;AAFN,KADR;AAeE,IAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OADD;AAEPC,MAAAA,KAAK,EAAE;AAAED,QAAAA,OAAO,EAAE,IAAX;AAAiBE,QAAAA,IAAI,EAAG,oBAAmBb,OAAQ;AAAnD;AAFA;AAfX;AAAA;AAAA;AAAA;AAAA,UADwB,GAqBtB,IArBJ,CAhBqE,CAuCrE;;AACA,QAAMc,SAAS,GAAGb,SAAS,CAAC,CAAD,CAAT,gBAChB,QAAC,IAAD;AACE,IAAA,IAAI,EAAE;AACJK,MAAAA,MAAM,EAAEL,SAAS,CAACc,GAAV,CAAc,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAcA,IAA5B,CADJ;AAGJT,MAAAA,QAAQ,EAAE,CACR;AACEX,QAAAA,IAAI,EAAEK,SAAS,CAACc,GAAV,CAAc,CAAC;AAAElB,UAAAA;AAAF,SAAD,KAAmBA,SAAjC,CADR;AAEEoB,QAAAA,KAAK,EAAE,UAFT;AAGEC,QAAAA,WAAW,EAAE,SAHf;AAIEC,QAAAA,IAAI,EAAE;AAJR,OADQ,EAOR;AACEvB,QAAAA,IAAI,EAAEK,SAAS,CAACc,GAAV,CAAc,CAAC;AAAEjB,UAAAA;AAAF,SAAD,KAAgBA,MAA9B,CADR;AAEEmB,QAAAA,KAAK,EAAE,QAFT;AAGEC,QAAAA,WAAW,EAAE,KAHf;AAIEV,QAAAA,eAAe,EAAE,uBAJnB;AAKEW,QAAAA,IAAI,EAAE;AALR,OAPQ;AAHN;AADR;AAAA;AAAA;AAAA;AAAA,UADgB,GAsBd,IAtBJ,CAxCqE,CA+DrE;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEzB,MAAM,CAAC0B,SAAvB;AAAA,cAEGpB,OAAO,GAAGK,QAAH,GAAcS;AAFxB;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAvED;;GAAMnB,K;;KAAAA,K;AAyEN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../API';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data: { confirmed, deaths, recovered }, country }) => {\n  const [dailyData, setDailyData] = useState({});\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      //Populate dailyData with modified data which is returned from func fetchDailyData\n      const gotten = await fetchDailyData();\n      setDailyData(gotten);\n    };\n\n    //console.log(\"Gotten Data\", dailyData);\n    //Call the function\n    fetchAPI();\n  }, []);\n\n  //For local countries data\n  const barChart = confirmed ? (\n    <Bar\n      data={{\n        labels: ['Infected', 'Recovered', 'Deaths'],\n        datasets: [\n          {\n            labels: 'People',\n            backgroundColor: [\n              ' rgba(0, 0, 255, 0.5)',\n              ' rgba(0, 255, 0, 0.5)',\n              'rgba(255, 0, 0, 0.5)',\n            ],\n            data: [confirmed.value, recovered.value, deaths.value],\n          },\n        ],\n      }}\n      options={{\n        legend: { display: false },\n        title: { display: true, text: `Current state in ${country}` },\n      }}\n    />\n  ) : null;\n\n  //For the global data\n  const lineChart = dailyData[0] ? (\n    <Line\n      data={{\n        labels: dailyData.map(({ date }) => date),\n\n        datasets: [\n          {\n            data: dailyData.map(({ confirmed }) => confirmed),\n            label: 'Infected',\n            borderColor: '#3333ff',\n            fill: true,\n          },\n          {\n            data: dailyData.map(({ deaths }) => deaths),\n            label: 'Deaths',\n            borderColor: 'red',\n            backgroundColor: 'rgba(255,255,255,0.5)',\n            fill: true,\n          },\n        ],\n      }}\n    />\n  ) : null;\n  // console.log(confirmed, recovered, deaths);\n\n  return (\n    <div className={styles.container}>\n      {/* <h1>Chart Component</h1> */}\n      {country ? barChart : lineChart}\n    </div>\n  );\n};\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}